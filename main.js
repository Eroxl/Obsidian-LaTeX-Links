/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var l=Object.defineProperty;var c=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var h=Object.prototype.hasOwnProperty;var m=(t,e)=>{for(var i in e)l(t,i,{get:e[i],enumerable:!0})},w=(t,e,i,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of p(e))!h.call(t,s)&&s!==i&&l(t,s,{get:()=>e[s],enumerable:!(r=c(e,s))||r.enumerable});return t};var E=t=>w(l({},"__esModule",{value:!0}),t);var u={};m(u,{default:()=>o});module.exports=E(u);var f=require("obsidian"),d=require("@codemirror/view"),o=class extends f.Plugin{async onload(){let e=i=>{i.findAll(".math").flatMap(s=>s.findAll("a")).forEach(s=>{let n=s.href;if(!n)return;let[a]=n.split("=");a!=="app://obsidian.md/file"&&a!=="file"||(s.href=`obsidian://open?file=${n.slice(a.length+1)}`)})};this.registerEditorExtension(d.ViewPlugin.fromClass(class{update(i){e(i.view.dom)}})),this.registerMarkdownPostProcessor(i=>{e(i)})}};
